!function(){"use strict";!function(){let q;document.addEventListener("click",(function(event){if(event.target.matches("button.report-tags-etl-reset"))q=new XMLHttpRequest,q.open("get","/Settings/?handler=DefaultEtl",!0),q.setRequestHeader("Content-Type","text/html;charset=UTF-8`"),q.setRequestHeader("X-Requested-With","XMLHttpRequest"),q.send(),q.addEventListener("readystatechange",(function(){4===this.readyState&&200===this.status&&(document.querySelector(".report-tags-etl textarea").value=q.responseText)}));else if(event.target.matches('.settings-search-visiblity[type="checkbox"]')&&"INPUT"===event.target.tagName){const p=event.target.parentElement,i=event.target;let type=1;i.hasAttribute("checked")?(i.removeAttribute("checked"),type=2):i.setAttribute("checked","checked");const data={TypeId:p.getAttribute("typeId"),GroupId:p.hasAttribute("groupId")?p.getAttribute("groupId"):"",Type:type},url=Object.keys(data).map((function(k){return encodeURIComponent(k)+"="+encodeURIComponent(data[k])})).join("&");q=new XMLHttpRequest,q.open("post","/Settings/Search/?handler=SearchUpdateVisibility&"+url,!0),q.setRequestHeader("Content-Type","text/html;charset=UTF-8`"),q.setRequestHeader("X-Requested-With","XMLHttpRequest"),q.send(),q.addEventListener("readystatechange",(function(){4===this.readyState&&200===this.status&&showMessageBox("Changes saved.")}))}else if(event.target.matches("a.settings-search-name")){const input=event.target.closest(".field").querySelector("input[groupId]");if(void 0===input)return!1;q=new XMLHttpRequest,q.open("post","/Settings/Search/?handler=SearchUpdateText&id="+input.getAttribute("groupId")+"&text="+input.value,!0),q.setRequestHeader("Content-Type","text/html;charset=UTF-8`"),q.setRequestHeader("X-Requested-With","XMLHttpRequest"),q.send(),q.addEventListener("readystatechange",(function(){4===this.readyState&&200===this.status&&showMessageBox("Changes saved.")}))}}))}(),document.addEventListener("click",(function(event){if(event.target.matches('.role-permissions[type="checkbox"]')&&"INPUT"===event.target.tagName){const i=event.target;let type=1;i.hasAttribute("checked")?(i.removeAttribute("checked"),type=2):i.setAttribute("checked","checked");const data={RoleId:i.getAttribute("roleid"),PermissionId:i.getAttribute("permissionid"),Type:type},url=Object.keys(data).map((function(k){return encodeURIComponent(k)+"="+encodeURIComponent(data[k])})).join("&"),q=new XMLHttpRequest;q.open("post","/Settings/Roles/?handler=UpdatePermissions&"+url,!0),q.setRequestHeader("Content-Type","text/html;charset=UTF-8`"),q.setRequestHeader("X-Requested-With","XMLHttpRequest"),q.send(),q.addEventListener("readystatechange",(function(){4===this.readyState&&200===this.status&&console.log("Changes saved.")}))}}))}();
